{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\lucas\\\\Downloads\\\\Macautec-Jeimy-Cliente\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Downloads\\\\Macautec-Jeimy-Cliente\\\\src\\\\components\\\\login.component.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport '../login.css';\n\nasync function loginUser(credentials) {\n  return fetch('http://localhost:4000/usuarios/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(credentials)\n  }).then(data => data.json());\n}\n\nexport default function Login({\n  setToken\n}) {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setUserName = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  let _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = await loginUser({\n      email,\n      password\n    });\n\n    if (data.login) {\n      setToken(data);\n    } else {\n      setError(data.error);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"login-wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Macautec\"), React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Email\")), React.createElement(Form.Control, {\n    type: \"text\",\n    onChange: e => setUserName(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(Form.Group, {\n    controlId: \"Contrasena\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Contrase\\xF1a\")), React.createElement(Form.Control, {\n    type: \"password\",\n    onChange: e => setPassword(e.target.value),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(Button, {\n    variant: \"danger\",\n    size: \"lg\",\n    block: \"block\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Ingresar\")), React.createElement(\"div\", {\n    className: \"text-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, error));\n}\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["C:\\Users\\lucas\\Downloads\\Macautec-Jeimy-Cliente\\src\\components\\login.component.js"],"names":["React","useState","PropTypes","Form","Button","loginUser","credentials","fetch","method","headers","body","JSON","stringify","then","data","json","Login","setToken","email","setUserName","password","setPassword","error","setError","handleSubmit","e","preventDefault","login","target","value","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport '../login.css';\n\nasync function loginUser(credentials) {\n return fetch('http://localhost:4000/usuarios/login', {\n   method: 'POST',\n   headers: {\n     'Content-Type': 'application/json'\n   },\n   body: JSON.stringify(credentials)\n })\n   .then( data => data.json())\n}\n\n\nexport default function Login({ setToken }) {\n  const [email, setUserName] = useState();\n  const [password, setPassword] = useState();\n  let [error, setError] = useState();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = await loginUser({\n      email,\n      password\n    });\n    if(data.login){\n      setToken(data);\n    }else{\n      setError(data.error);\n    }\n    \n  }\n\n  return(\n    <div className=\"login-wrapper\">\n      <h1>Macautec</h1>\n      <Form onSubmit={handleSubmit}>\n      \n        <Form.Group controlId=\"Email\">\n          <Form.Label><strong>Email</strong></Form.Label>\n          <Form.Control type=\"text\" onChange={e => setUserName(e.target.value)} required/>\n        </Form.Group>\n\n        <Form.Group controlId=\"Contrasena\">\n          <Form.Label><strong>Contrase√±a</strong></Form.Label>\n          <Form.Control type=\"password\" onChange={e => setPassword(e.target.value)} required/>\n        </Form.Group>\n        \n\n        <Button variant=\"danger\" size=\"lg\" block=\"block\" type=\"submit\">\n          Ingresar\n        </Button>\n        </Form>\n        <div className=\"text-danger\">{error}</div>\n    </div>\n  )\n}\n\nLogin.propTypes = {\n  setToken: PropTypes.func.isRequired\n};"]},"metadata":{},"sourceType":"module"}